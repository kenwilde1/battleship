(()=>{"use strict";class e{constructor(e,t,a){this.id=e,this.length=t,this.coords=a}hit(e){return!!this.coords.includes(e)&&(this.length--,!0)}isSunk(){return this.length<1}}class t{constructor(){this.hits=0,this.misses=0,this.gameboardArray=[],this.shipList=[]}initializeGameboard(){for(let e=0;e<100;e++)this.gameboardArray[e]=[e,{isPlaced:!1,isHit:!1,shipID:null}];return this.gameboardArray}placeShip(t,a){const r=new e(t,a.length,a);this.shipList.push(r);for(let e=0;e<a.length;e++)this.gameboardArray[a[e]][1].isPlaced=!0,this.gameboardArray[a[e]][1].shipID=t;return this.gameboardArray.slice(a[0],a[a.length-1]+1)}receiveAttack(e){console.log(e);const t=this.gameboardArray[e][1];if(t.isPlaced&&!t.isHit){const a=t.shipID;return this.shipList.filter((r=>{r.id===a&&(r.hit(e),t.isHit=!0)})),this.hits++,!0}return this.gameboardArray[e][1].isHit=!0,this.misses++,!1}isGameOver(){return 0===this.shipList.reduce(((e,t)=>t.length+e),0)}}class a{constructor(e){this.userType=e}attack(e,t){let a=!1;for(;!a;){const e=Math.floor(100*Math.random());return t.receiveAttack(e)||(a=!0),e}}}function r(e,t){let a;for(a="human"===t?document.querySelector(".human-gameboard"):document.querySelector(".computer-gameboard");a.firstChild;)a.removeChild(a.lastChild);for(let t=0;t<100;t++){let r=document.createElement("div");e[t][1].isPlaced&&!e[t][1].isHit?r.className="cell ship":!e[t][1].isPlaced&&e[t][1].isHit?r.className="cell ship missed":e[t][1].isHit?r.className="cell ship attacked":r.className="cell",r.dataset.id=t,a.appendChild(r)}}const s=[{id:0,length:2,coords:[]},{id:1,length:3,coords:[]},{id:2,length:3,coords:[]},{id:3,length:4,coords:[]},{id:4,length:5,coords:[]}],i=[{id:0,length:2,coords:[0,1]},{id:1,length:3,coords:[10,20,30]},{id:2,length:3,coords:[35,36,37]},{id:3,length:4,coords:[82,83,84,85]},{id:4,length:5,coords:[94,95,96,97,98]}],o=new class{constructor(){this.humanGameboard=new t,this.humanArray=this.humanGameboard.initializeGameboard(),this.computerGameboard=new t,this.computerArray=this.computerGameboard.initializeGameboard(),this.currentPlayer="human",this.computerPlayer=new a,this.computerGameboardElement=document.querySelector(".computer-gameboard"),this.humanGameboardElement=document.querySelector(".human-gameboard")}addEventListeners(){document.querySelectorAll(".computer-gameboard .cell").forEach((e=>e.addEventListener("click",(e=>{let t=parseInt(e.target.dataset.id);this.handleClick(t)||setTimeout((()=>{this.switchCurrentPlayer()}),1e3)}))))}startGame(){this.computerGameboardElement.classList.remove("inactive"),this.humanGameboardElement.classList.add("inactive")}initializeGameboard(){this.placeComputerShips(),r(this.humanArray,"human"),r(this.computerArray,"comp"),this.addEventListeners()}placeHumanShips(){s.forEach((e=>this.humanGameboard.placeShip(e.id,e.coords)))}placeComputerShips(){i.forEach((e=>this.computerGameboard.placeShip(e.id,e.coords)))}handleClick(e){console.log(this.computerArray);const t=this.computerGameboard.receiveAttack(e);return t?this.computerGameboardElement.classList.remove("inactive"):(this.computerGameboardElement.classList.add("inactive"),this.humanGameboardElement.classList.toggle("inactive")),r(this.computerArray,"comp"),this.addEventListeners(),this.computerGameboard.isGameOver()&&this.gameOver(),t}switchCurrentPlayer(){let e=!1;for(;!e;){const t=Math.floor(100*Math.random());this.humanArray[t][1].isHit||this.humanArray[t][1].isPlaced||(this.humanGameboard.receiveAttack(t),console.log(this.humanArray),r(this.humanArray,"human"),this.computerGameboardElement.classList.remove("inactive"),this.humanGameboardElement.classList.add("inactive"),e=!0),!this.humanArray[t][1].isHit&&this.humanArray[t][1].isPlaced&&(this.humanGameboard.receiveAttack(t),r(this.humanArray,"human"),this.computerGameboardElement.classList.remove("inactive"),this.humanGameboardElement.classList.add("inactive"))}}gameOver(e){alert(`Game Over! ${e} wins!`),this.humanGameboard=new t,this.humanArray=this.humanGameboard.initializeGameboard(),this.computerGameboard=new t,this.computerArray=this.computerGameboard.initializeGameboard(),this.initializeGameboard()}dragShips(){let e=[];const t=document.querySelectorAll(".user-ship-container .shipCell"),a=document.querySelectorAll(".human-gameboard .cell");let r,i;t.forEach((a=>{e.push(t)}));let o=0;e[0].forEach((e=>e.addEventListener("mousedown",(e=>{r=e.target.id}))));const n=e=>{i=e.currentTarget.lastElementChild,e.target.childNodes.forEach((e=>{e.id&&o++})),console.log(i)},h=e=>{e.preventDefault()},d=e=>{e.preventDefault()},c=()=>{},l=e=>{let t=i.id,n=t.slice(0,-2);console.log(n);let h=parseInt(t.substr(-1))+parseInt(e.target.dataset.id),d=parseInt(r.substr(-1));h-=d;let c=[];for(let t=o-1;t>0;t--){const a=parseInt(e.target.dataset.id)-t;c.push(a)}c.push(parseInt(e.target.dataset.id));const l=parseInt(i.parentElement.dataset.id);this.humanGameboard.shipList.filter((e=>{e.id===l&&(e.coords=[...c])})),console.log(c),s.filter((e=>{e.id===l&&(console.log(!0),e.coords=[...c])})),console.log(s);for(let t=0;t<o;t++)a[parseInt(e.target.dataset.id)-d+t].classList.add("taken"),this.humanArray[e.target.dataset.id-d+t].isPlaced=!0,this.humanArray[e.target.dataset.id-d+t].shipID=parseInt(i.parentElement.dataset.id);this.placeHumanShips(),o=0,console.log(this.humanArray)},m=()=>{};e[0].forEach((e=>e.addEventListener("dragstart",n))),a.forEach((e=>e.addEventListener("dragstart",n))),a.forEach((e=>e.addEventListener("dragover",h))),a.forEach((e=>e.addEventListener("dragenter",d))),a.forEach((e=>e.addEventListener("dragleave",c))),a.forEach((e=>e.addEventListener("drop",l))),a.forEach((e=>e.addEventListener("dragend",m)))}};o.initializeGameboard(),document.querySelector(".header button").addEventListener("click",(()=>o.startGame())),o.dragShips()})();